/**
 * generated by Xtext 2.25.0
 */
package org.example.domainmodel.domainmodel.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.example.domainmodel.domainmodel.Address;
import org.example.domainmodel.domainmodel.Condition;
import org.example.domainmodel.domainmodel.DomainmodelPackage;
import org.example.domainmodel.domainmodel.Ship;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ship</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.domainmodel.domainmodel.impl.ShipImpl#getConditions <em>Conditions</em>}</li>
 *   <li>{@link org.example.domainmodel.domainmodel.impl.ShipImpl#getAction <em>Action</em>}</li>
 *   <li>{@link org.example.domainmodel.domainmodel.impl.ShipImpl#getAddress <em>Address</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ShipImpl extends DeclarationImpl implements Ship
{
  /**
   * The cached value of the '{@link #getConditions() <em>Conditions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditions()
   * @generated
   * @ordered
   */
  protected EList<Condition> conditions;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected EList<EObject> action;

  /**
   * The cached value of the '{@link #getAddress() <em>Address</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddress()
   * @generated
   * @ordered
   */
  protected EList<Address> address;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ShipImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DomainmodelPackage.Literals.SHIP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Condition> getConditions()
  {
    if (conditions == null)
    {
      conditions = new EObjectContainmentEList<Condition>(Condition.class, this, DomainmodelPackage.SHIP__CONDITIONS);
    }
    return conditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EObject> getAction()
  {
    if (action == null)
    {
      action = new EObjectContainmentEList<EObject>(EObject.class, this, DomainmodelPackage.SHIP__ACTION);
    }
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Address> getAddress()
  {
    if (address == null)
    {
      address = new EObjectContainmentEList<Address>(Address.class, this, DomainmodelPackage.SHIP__ADDRESS);
    }
    return address;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DomainmodelPackage.SHIP__CONDITIONS:
        return ((InternalEList<?>)getConditions()).basicRemove(otherEnd, msgs);
      case DomainmodelPackage.SHIP__ACTION:
        return ((InternalEList<?>)getAction()).basicRemove(otherEnd, msgs);
      case DomainmodelPackage.SHIP__ADDRESS:
        return ((InternalEList<?>)getAddress()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DomainmodelPackage.SHIP__CONDITIONS:
        return getConditions();
      case DomainmodelPackage.SHIP__ACTION:
        return getAction();
      case DomainmodelPackage.SHIP__ADDRESS:
        return getAddress();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DomainmodelPackage.SHIP__CONDITIONS:
        getConditions().clear();
        getConditions().addAll((Collection<? extends Condition>)newValue);
        return;
      case DomainmodelPackage.SHIP__ACTION:
        getAction().clear();
        getAction().addAll((Collection<? extends EObject>)newValue);
        return;
      case DomainmodelPackage.SHIP__ADDRESS:
        getAddress().clear();
        getAddress().addAll((Collection<? extends Address>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DomainmodelPackage.SHIP__CONDITIONS:
        getConditions().clear();
        return;
      case DomainmodelPackage.SHIP__ACTION:
        getAction().clear();
        return;
      case DomainmodelPackage.SHIP__ADDRESS:
        getAddress().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DomainmodelPackage.SHIP__CONDITIONS:
        return conditions != null && !conditions.isEmpty();
      case DomainmodelPackage.SHIP__ACTION:
        return action != null && !action.isEmpty();
      case DomainmodelPackage.SHIP__ADDRESS:
        return address != null && !address.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ShipImpl
